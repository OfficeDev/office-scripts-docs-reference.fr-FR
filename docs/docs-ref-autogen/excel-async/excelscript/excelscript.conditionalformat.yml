### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalFormat:interface'
    summary: 'Objet qui encapsule une plage, un format, une règle et d’autres propriétés d’un format conditionnel. Pour en savoir plus sur le modèle objet de mise en forme conditionnelle, consultez la rubrique [appliquer une mise en forme conditionnelle à des plages Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting)<!-- -->.'
    name: Excel.ConditionalFormat
    fullName: Excel.ConditionalFormat
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ConditionalFormat#cellValueOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#colorScaleOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#customOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#dataBarOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#delete:member(1)'
      - 'excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)'
      - 'excel!Excel.ConditionalFormat#getRanges:member(1)'
      - 'excel!Excel.ConditionalFormat#iconSetOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#id:member'
      - 'excel!Excel.ConditionalFormat#load:member(1)'
      - 'excel!Excel.ConditionalFormat#presetOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#priority:member'
      - 'excel!Excel.ConditionalFormat#stopIfTrue:member'
      - 'excel!Excel.ConditionalFormat#textComparisonOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#topBottomOrNullObject:member'
      - 'excel!Excel.ConditionalFormat#type:member'
  - uid: 'excel!Excel.ConditionalFormat#cellValueOrNullObject:member'
    summary: 'Renvoie les propriétés de mise en forme conditionnelle de la valeur de la cellule si le format conditionnel actuel est un type CellValue. Par exemple, pour mettre en forme toutes les cellules comprises entre 5 et 10.'
    name: cellValueOrNullObject
    fullName: cellValueOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValueOrNullObject: CellValueConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CellValueConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#colorScaleOrNullObject:member'
    summary: Renvoie les propriétés de mise en forme conditionnelle ColorScale si le format conditionnel actuel est un type ColorScale.
    name: colorScaleOrNullObject
    fullName: colorScaleOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScaleOrNullObject: ColorScaleConditionalFormat;'
      return:
        type:
          - 'excel!Excel.ColorScaleConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#customOrNullObject:member'
    summary: Renvoie les propriétés de mise en forme conditionnelle personnalisées si le format conditionnel actuel est un type personnalisé.
    name: customOrNullObject
    fullName: customOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customOrNullObject: CustomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CustomConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#dataBarOrNullObject:member'
    summary: Renvoie les propriétés de la barre de données si le format conditionnel actuel est une barre de données.
    name: dataBarOrNullObject
    fullName: dataBarOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBarOrNullObject: DataBarConditionalFormat;'
      return:
        type:
          - 'excel!Excel.DataBarConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#delete:member(1)'
    summary: Supprime cette mise en forme conditionnelle.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)'
    summary: Renvoie la plage à laquelle le format conditionnelle est appliqué ou un objet null si la mise en forme conditionnelle est appliquée à plusieurs plages.
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#getRanges:member(1)'
    summary: 'Renvoie le RangeAreas comprenant une ou plusieurs plages rectangulaires, le format conditionnel est appliqué.'
    name: getRanges()
    fullName: getRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(): RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalFormat#iconSetOrNullObject:member'
    summary: Renvoie les propriétés de format conditionnel IconSet si le format conditionnel actuel est un type IconSet.
    name: iconSetOrNullObject
    fullName: iconSetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSetOrNullObject: IconSetConditionalFormat;'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#id:member'
    summary: La priorité de la mise en forme conditionnelle dans la ConditionalFormatCollection actuelle.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormat#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalFormat#presetOrNullObject:member'
    summary: 'Renvoie le format conditionnel des critères prédéfinis. Pour plus d’informations, voir Excel. PresetCriteriaConditionalFormat.'
    name: presetOrNullObject
    fullName: presetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly presetOrNullObject: PresetCriteriaConditionalFormat;'
      return:
        type:
          - 'excel!Excel.PresetCriteriaConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#priority:member'
    summary: 'Priorité (ou index) dans la collection de mise en forme conditionnelle dans laquelle ce format conditionnel existe actuellement. Cette modification modifie également les priorités des autres mises en forme conditionnelles afin d’autoriser un ordre de priorité contigu. Utiliser une priorité négative pour commencer à partir de l’arrière. Les priorités supérieures aux limites reçoivent et définissent la priorité maximale (ou minimale si négative). Notez également que si vous modifiez la priorité, vous devez extraire à nouveau une nouvelle copie de l’objet à cet emplacement de priorité si vous souhaitez y apporter d’autres modifications.'
    name: priority
    fullName: priority
    langs:
      - typeScript
    type: property
    syntax:
      content: 'priority: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ConditionalFormat#stopIfTrue:member'
    summary: 'Si les conditions de cette mise en forme conditionnelle sont remplies, aucun format de priorité inférieure ne doit prendre effet sur cette cellule. NULL sur barre, les jeux d’icônes et colorscales car il n’existe pas de concept de StopIfTrue pour ces'
    name: stopIfTrue
    fullName: stopIfTrue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'stopIfTrue: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalFormat#textComparisonOrNullObject:member'
    summary: "Renvoie les propriétés de mise en forme conditionnelle de texte spécifiques si le format conditionnel actuel est un type de texte. Par exemple, pour mettre en forme des cellules correspondant au mot «\_Text\_»."
    name: textComparisonOrNullObject
    fullName: textComparisonOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparisonOrNullObject: TextConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TextConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#topBottomOrNullObject:member'
    summary: 'Renvoie les propriétés de mise en forme conditionnelle de haut en bas si le format conditionnel actuel est un type de niveau inférieur. Par exemple, pour mettre en forme les 10% ou les 10 derniers éléments.'
    name: topBottomOrNullObject
    fullName: topBottomOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottomOrNullObject: TopBottomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.TopBottomConditionalFormat:interface'
  - uid: 'excel!Excel.ConditionalFormat#type:member'
    summary: Type de mise en forme conditionnelle. Une seule peut être définie à la fois.
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: ConditionalFormatType;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatType:enum'
        description: |-


          #### <a name="examples"></a>範例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let worksheetRange = sheet.getRange();
              worksheetRange.conditionalFormats.load("type");

              await context.sync();

              let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];
              worksheetRange.conditionalFormats.items.forEach(item => {
                  cfRangePairs.push({
                      cf: item,
                      range: item.getRange().load("address")
                  });
              });

              await context.sync();

              if (cfRangePairs.length > 0) {
                  cfRangePairs.forEach(item => {
                      console.log(item.cf.type);
                  });
              } else {
                  console.log("No conditional formats applied.");
              }
          }
          ```
references:
  - uid: 'excel!Excel.CellValueConditionalFormat:interface'
    name: CellValueConditionalFormat
    fullName: Excel.CellValueConditionalFormat
  - uid: 'excel!Excel.ColorScaleConditionalFormat:interface'
    name: ColorScaleConditionalFormat
    fullName: Excel.ColorScaleConditionalFormat
  - uid: 'excel!Excel.CustomConditionalFormat:interface'
    name: CustomConditionalFormat
    fullName: Excel.CustomConditionalFormat
  - uid: 'excel!Excel.DataBarConditionalFormat:interface'
    name: DataBarConditionalFormat
    fullName: Excel.DataBarConditionalFormat
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.RangeAreas:interface'
    name: RangeAreas
    fullName: Excel.RangeAreas
  - uid: 'excel!Excel.IconSetConditionalFormat:interface'
    name: IconSetConditionalFormat
    fullName: Excel.IconSetConditionalFormat
  - uid: 'excel!Excel.PresetCriteriaConditionalFormat:interface'
    name: PresetCriteriaConditionalFormat
    fullName: Excel.PresetCriteriaConditionalFormat
  - uid: 'excel!Excel.TextConditionalFormat:interface'
    name: TextConditionalFormat
    fullName: Excel.TextConditionalFormat
  - uid: 'excel!Excel.TopBottomConditionalFormat:interface'
    name: TopBottomConditionalFormat
    fullName: Excel.TopBottomConditionalFormat
  - uid: 'excel!Excel.ConditionalFormatType:enum'
    name: ConditionalFormatType
    fullName: Excel.ConditionalFormatType