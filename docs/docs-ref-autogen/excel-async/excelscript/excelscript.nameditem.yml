### YamlMime:TSType
name: Excel.NamedItem
uid: excel!Excel.NamedItem:interface
package: excel!
fullName: Excel.NamedItem
summary: Représente un nom défini pour une plage de cellules ou une valeur. Les noms peuvent être des objets nommés primitifs (comme indiqué dans le type ci-dessous), un objet Range ou une référence à une plage. Cet objet peut être utilisé pour obtenir l’objet de plage associé à des noms.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: arrayValues
  uid: excel!Excel.NamedItem#arrayValues:member
  package: excel!
  fullName: arrayValues
  summary: Renvoie un objet contenant les valeurs et les types de l’élément nommé.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly arrayValues: NamedItemArrayValues;'
    return:
      type: <xref uid="excel!Excel.NamedItemArrayValues:interface" />
- name: comment
  uid: excel!Excel.NamedItem#comment:member
  package: excel!
  fullName: comment
  summary: Spécifie le commentaire associé à ce nom.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'comment: string;'
    return:
      type: string
- name: formula
  uid: excel!Excel.NamedItem#formula:member
  package: excel!
  fullName: formula
  summary: Formule de l’élément nommé. La formule commence toujours par un signe '='.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula: any;'
    return:
      type: any
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    let myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        console.log(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n}\n```"
- name: name
  uid: excel!Excel.NamedItem#name:member
  package: excel!
  fullName: name
  summary: Nom de l’objet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: scope
  uid: excel!Excel.NamedItem#scope:member
  package: excel!
  fullName: scope
  summary: 'Indique si le nom est inclus dans le classeur ou dans une feuille de calcul spécifique. Les valeurs possibles sont les suivantes : Worksheet, Workbook.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly scope: NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type: <xref uid="excel!Excel.NamedItemScope:enum" /> | "Worksheet" | "Workbook"
- name: type
  uid: excel!Excel.NamedItem#type:member
  package: excel!
  fullName: type
  summary: Cette énumération spécifie le type de la valeur renvoyée par la formule du nom. Pour plus d’informations, voir Excel. NamedItemType.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      readonly type:
                  | NamedItemType
                  | "String"
                  | "Integer"
                  | "Double"
                  | "Boolean"
                  | "Range"
                  | "Error"
                  | "Array";
    return:
      type: >-
        | <xref uid="excel!Excel.NamedItemType:enum" />
                    | "String"
                    | "Integer"
                    | "Double"
                    | "Boolean"
                    | "Range"
                    | "Error"
                    | "Array"
- name: value
  uid: excel!Excel.NamedItem#value:member
  package: excel!
  fullName: value
  summary: Représente la valeur calculée par la formule du nom. Pour une plage nommée, renvoie l’adresse de la plage.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly value: any;'
    return:
      type: any
- name: visible
  uid: excel!Excel.NamedItem#visible:member
  package: excel!
  fullName: visible
  summary: Indique si l’objet est visible.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'visible: boolean;'
    return:
      type: boolean
- name: worksheet
  uid: excel!Excel.NamedItem#worksheet:member
  package: excel!
  fullName: worksheet
  summary: Renvoie la feuille de calcul dans laquelle est inclus l’élément nommé. Renvoie une erreur si l’élément est inclus dans l’étendue du classeur.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
- name: worksheetOrNullObject
  uid: excel!Excel.NamedItem#worksheetOrNullObject:member
  package: excel!
  fullName: worksheetOrNullObject
  summary: Renvoie la feuille de calcul dans laquelle est inclus l’élément nommé. Renvoie un objet null si l’élément est inclus dans le classeur à la place.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheetOrNullObject: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
methods:
- name: delete()
  uid: excel!Excel.NamedItem#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Supprime le nom donné.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n}\n```"
- name: getRange()
  uid: excel!Excel.NamedItem#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: Renvoie l’objet de plage qui est associé au nom. Renvoie une erreur si le type de l’élément nommé n’est pas une plage.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRangeOrNullObject()
  uid: excel!Excel.NamedItem#getRangeOrNullObject:member(1)
  package: excel!
  fullName: getRangeOrNullObject()
  summary: Renvoie l’objet de plage qui est associé au nom. Renvoie un objet null si le type de l’élément nommé n’est pas une plage.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeOrNullObject(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.NamedItem#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez contacter `context.sync()` avant de lire les propriétés.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 997de6c6512e3f455b29d74df0acc11e054a7739
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49419900"
