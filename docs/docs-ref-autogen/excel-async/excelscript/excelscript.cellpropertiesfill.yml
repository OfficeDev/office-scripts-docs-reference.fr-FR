### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CellPropertiesFill:interface'
    summary: 'Représente les `format.fill` propriétés d''`getCellProperties`<!-- -->, `getRowProperties`<!-- -->et `getColumnProperties` ou le `format.fill` paramètre d’entrée de`setCellProperties`<!-- -->, `setRowProperties`<!-- -->, et`setColumnProperties`<!-- -->.'
    name: Excel.CellPropertiesFill
    fullName: Excel.CellPropertiesFill
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.CellPropertiesFill#color:member'
      - 'excel!Excel.CellPropertiesFill#pattern:member'
      - 'excel!Excel.CellPropertiesFill#patternColor:member'
      - 'excel!Excel.CellPropertiesFill#patternTintAndShade:member'
      - 'excel!Excel.CellPropertiesFill#tintAndShade:member'
  - uid: 'excel!Excel.CellPropertiesFill#color:member'
    summary: Représente la `format.fill.color` propriété.
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color?: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getActiveWorksheet();

              // Creating the SettableCellProperties objects to use for the range.
              // In your add-in, these should be created once, outside the function.
              let topHeaderProps: Excel.SettableCellProperties = {
                  // The style property takes a string matching the name of an Excel style.
                  // Built-in style names are listed in the `BuiltInStyle` enum.
                  // Note that a style will overwrite any formatting,
                  // so do not use the format property with the style property.
                  style: "Heading1"
              };

              let headerProps: Excel.SettableCellProperties = {
                  // Any subproperties of format that are not set will not be changed when these cell properties are set.
                  format: {
                      fill: {
                          color: "Blue"
                      },
                      font: {
                          color: "White",
                          bold: true
                      }
                  }
              };

              let nonApplicableProps: Excel.SettableCellProperties = {
                  format: {
                      fill: {
                          pattern: Excel.FillPattern.gray25
                      },
                      font: {
                          color: "Gray",
                          italic: true
                      }
                  }
              };

              let matchupScoreProps: Excel.SettableCellProperties = {
                  format: {
                      borders: {
                          bottom: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          left: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          right: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          top: {
                              style: Excel.BorderLineStyle.continuous
                          }
                      }
                  }
              };

              let range = sheet.getRange("A1:E5");

              // You can use empty JSON objects to avoid changing a cell's properties.
              range.setCellProperties([
                  [topHeaderProps, {}, {}, {}, {}],
                  [{}, {}, headerProps, headerProps, headerProps],
                  [{}, headerProps, nonApplicableProps, matchupScoreProps, matchupScoreProps],
                  [{}, headerProps, matchupScoreProps, nonApplicableProps, matchupScoreProps],
                  [{}, headerProps, matchupScoreProps, matchupScoreProps, nonApplicableProps]
              ]);

              sheet.getUsedRange().format.autofitColumns();
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.CellPropertiesFill#pattern:member'
    summary: Représente la `format.fill.pattern` propriété.
    name: pattern
    fullName: pattern
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        pattern?:
                    | FillPattern
                    | "None"
                    | "Solid"
                    | "Gray50"
                    | "Gray75"
                    | "Gray25"
                    | "Horizontal"
                    | "Vertical"
                    | "Down"
                    | "Up"
                    | "Checker"
                    | "SemiGray75"
                    | "LightHorizontal"
                    | "LightVertical"
                    | "LightDown"
                    | "LightUp"
                    | "Grid"
                    | "CrissCross"
                    | "Gray16"
                    | "Gray8"
                    | "LinearGradient"
                    | "RectangularGradient";
      return:
        type:
          - 'excel!Excel.CellPropertiesFill#pattern~0:complex'
  - uid: 'excel!Excel.CellPropertiesFill#patternColor:member'
    summary: Représente la `format.fill.patternColor` propriété.
    name: patternColor
    fullName: patternColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'patternColor?: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.CellPropertiesFill#patternTintAndShade:member'
    summary: Représente la `format.fill.patternTintAndShade` propriété.
    name: patternTintAndShade
    fullName: patternTintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'patternTintAndShade?: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.CellPropertiesFill#tintAndShade:member'
    summary: Représente la `format.fill.tintAndShade` propriété.
    name: tintAndShade
    fullName: tintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tintAndShade?: number;'
      return:
        type:
          - number
references:
  - uid: 'excel!Excel.CellPropertiesFill#pattern~0:complex'
    name: |-
      | FillPattern
                  | "None"
                  | "Solid"
                  | "Gray50"
                  | "Gray75"
                  | "Gray25"
                  | "Horizontal"
                  | "Vertical"
                  | "Down"
                  | "Up"
                  | "Checker"
                  | "SemiGray75"
                  | "LightHorizontal"
                  | "LightVertical"
                  | "LightDown"
                  | "LightUp"
                  | "Grid"
                  | "CrissCross"
                  | "Gray16"
                  | "Gray8"
                  | "LinearGradient"
                  | "RectangularGradient"
    fullName: |-
      | Excel.FillPattern
                  | "None"
                  | "Solid"
                  | "Gray50"
                  | "Gray75"
                  | "Gray25"
                  | "Horizontal"
                  | "Vertical"
                  | "Down"
                  | "Up"
                  | "Checker"
                  | "SemiGray75"
                  | "LightHorizontal"
                  | "LightVertical"
                  | "LightDown"
                  | "LightUp"
                  | "Grid"
                  | "CrissCross"
                  | "Gray16"
                  | "Gray8"
                  | "LinearGradient"
                  | "RectangularGradient"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.FillPattern:enum'
        name: FillPattern
        fullName: Excel.FillPattern
      - name: |2-

                      | "None"
                      | "Solid"
                      | "Gray50"
                      | "Gray75"
                      | "Gray25"
                      | "Horizontal"
                      | "Vertical"
                      | "Down"
                      | "Up"
                      | "Checker"
                      | "SemiGray75"
                      | "LightHorizontal"
                      | "LightVertical"
                      | "LightDown"
                      | "LightUp"
                      | "Grid"
                      | "CrissCross"
                      | "Gray16"
                      | "Gray8"
                      | "LinearGradient"
                      | "RectangularGradient"
        fullName: |2-

                      | "None"
                      | "Solid"
                      | "Gray50"
                      | "Gray75"
                      | "Gray25"
                      | "Horizontal"
                      | "Vertical"
                      | "Down"
                      | "Up"
                      | "Checker"
                      | "SemiGray75"
                      | "LightHorizontal"
                      | "LightVertical"
                      | "LightDown"
                      | "LightUp"
                      | "Grid"
                      | "CrissCross"
                      | "Gray16"
                      | "Gray8"
                      | "LinearGradient"
                      | "RectangularGradient"