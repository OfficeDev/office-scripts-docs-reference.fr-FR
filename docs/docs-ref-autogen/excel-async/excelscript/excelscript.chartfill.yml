### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartFill:interface'
    summary: Représente le format de remplissage d’un élément de graphique.
    name: Excel.ChartFill
    fullName: Excel.ChartFill
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ChartFill#clear:member(1)'
      - 'excel!Excel.ChartFill#load:member(1)'
      - 'excel!Excel.ChartFill#setSolidColor:member(1)'
  - uid: 'excel!Excel.ChartFill#clear:member(1)'
    summary: Supprime la couleur de remplissage d’un élément de graphique.
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ChartFill#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartFill#setSolidColor:member(1)'
    summary: Définit le format de remplissage d’un élément de graphique sur une couleur unie.
    name: setSolidColor(color)
    fullName: setSolidColor(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSolidColor(color: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");

              let pointsCollection = sheet.charts.getItemAt(0).series.getItemAt(0).points;
              let point = pointsCollection.getItemAt(2);

              // Set color for chart point.
              point.format.fill.setSolidColor('red');

              await context.sync();        
          }
          ```
      parameters:
        - id: color
          description: "Code couleur HTML qui représente la couleur de l’arrière-plan, sous la forme \\# RRGGBB (par exemple, «\_FFA500\_») ou sous forme de couleur HTML nommée (par exemple, «\_orange\_»)."
          type:
            - string