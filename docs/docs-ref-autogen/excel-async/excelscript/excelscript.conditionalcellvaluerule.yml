### YamlMime:TSType
name: Excel.ConditionalCellValueRule
uid: excel!Excel.ConditionalCellValueRule:interface
package: excel!
fullName: Excel.ConditionalCellValueRule
summary: Représente une règle de format conditionnel de valeur de cellule.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: formula1
  uid: excel!Excel.ConditionalCellValueRule#formula1:member
  package: excel!
  fullName: formula1
  summary: Formule, si nécessaire, servant à évaluer la règle de mise en forme conditionnelle.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula1: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = sheet.getRange(\"B21:E23\");\n    let conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n}\n```"
- name: formula2
  uid: excel!Excel.ConditionalCellValueRule#formula2:member
  package: excel!
  fullName: formula2
  summary: Formule, si nécessaire, servant à évaluer la règle de mise en forme conditionnelle.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula2?: string;'
    return:
      type: string
- name: operator
  uid: excel!Excel.ConditionalCellValueRule#operator:member
  package: excel!
  fullName: operator
  summary: Opérateur du format conditionnel de la valeur de cellule.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      operator:
                  | ConditionalCellValueOperator
                  | "Invalid"
                  | "Between"
                  | "NotBetween"
                  | "EqualTo"
                  | "NotEqualTo"
                  | "GreaterThan"
                  | "LessThan"
                  | "GreaterThanOrEqual"
                  | "LessThanOrEqual";
    return:
      type: >-
        | <xref uid="excel!Excel.ConditionalCellValueOperator:enum" />
                    | "Invalid"
                    | "Between"
                    | "NotBetween"
                    | "EqualTo"
                    | "NotEqualTo"
                    | "GreaterThan"
                    | "LessThan"
                    | "GreaterThanOrEqual"
                    | "LessThanOrEqual"
      description: "\n\n#### <a name=\"examples\"></a>範例\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = sheet.getRange(\"B21:E23\");\n    let conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n}\n```"
metadata:
  ms.openlocfilehash: 644b745d5e8930a7b03169d1c6449503246c4e8b
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414697"
