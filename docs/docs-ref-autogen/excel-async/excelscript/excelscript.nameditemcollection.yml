### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NamedItemCollection:interface'
    summary: 'Collection de tous les objets NamedItem qui font partie du classeur ou de la feuille de calcul, en fonction de la manière dont ils ont été atteints.'
    name: Excel.NamedItemCollection
    fullName: Excel.NamedItemCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.NamedItemCollection#add:member(1)'
      - 'excel!Excel.NamedItemCollection#addFormulaLocal:member(1)'
      - 'excel!Excel.NamedItemCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.NamedItemCollection#load:member(1)'
  - uid: 'excel!Excel.NamedItemCollection#add:member(1)'
    summary: Ajoute un nouveau nom à la collection de l’étendue donnée.
    name: 'add(name, reference, comment)'
    fullName: 'add(name, reference, comment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        add(
                    name: string,
                    reference: Range | string,
                    comment?: string
                ): NamedItem;
      return:
        type:
          - 'excel!Excel.NamedItem:interface'
        description: |-


          #### <a name="examples"></a>Exemples

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let headerRange = sheet.getRange("A1:D1");

              sheet.names.add("ExpensesHeader", headerRange);
              let namedItems = sheet.names.load("name, type");

              await context.sync();
          }
          ```
      parameters:
        - id: name
          description: Nom de l’élément nommé.
          type:
            - string
        - id: reference
          description: Formule ou plage à laquelle le nom fait référence.
          type:
            - 'excel!Excel.NamedItemCollection#add~0:complex'
        - id: comment
          description: Facultatif. Commentaire associé à l’élément nommé.
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#addFormulaLocal:member(1)'
    summary: Ajoute un nouveau nom à la collection de l’étendue donnée à l’aide des paramètres régionaux de l’utilisateur pour la formule.
    name: 'addFormulaLocal(name, formula, comment)'
    fullName: 'addFormulaLocal(name, formula, comment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        addFormulaLocal(
                    name: string,
                    formula: string,
                    comment?: string
                ): NamedItem;
      return:
        type:
          - 'excel!Excel.NamedItem:interface'
        description: ''
      parameters:
        - id: name
          description: "«\_Nom\_» de l’élément nommé."
          type:
            - string
        - id: formula
          description: Formule dans les paramètres régionaux de l’utilisateur à laquelle le nom fait référence.
          type:
            - string
        - id: comment
          description: Facultatif. Commentaire associé à l’élément nommé.
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#getItemOrNullObject:member(1)'
    summary: 'Obtient un objet NamedItem à l’aide de son nom. Si l’objet nameditem n’existe pas, renvoie un objet null.'
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:interface'
        description: ''
      parameters:
        - id: name
          description: Nom NamedItem.
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.NamedItem:interface'
    name: NamedItem
    fullName: Excel.NamedItem
  - uid: 'excel!Excel.NamedItemCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'