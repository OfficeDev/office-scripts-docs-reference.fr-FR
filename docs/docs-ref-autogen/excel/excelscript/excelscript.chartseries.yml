### YamlMime:TSType
name: ExcelScript.ChartSeries
uid: 'ExcelScript!ExcelScript.ChartSeries:interface'
package: ExcelScript!
fullName: ExcelScript.ChartSeries
summary: Représente une série dans un graphique.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: addChartTrendline(type)
    uid: 'ExcelScript!ExcelScript.ChartSeries#addChartTrendline:member(1)'
    package: ExcelScript!
    fullName: addChartTrendline(type)
    summary: Ajoute une nouvelle courbe de tendance à la collection de courbes de tendance.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'addChartTrendline(type?: ChartTrendlineType): ChartTrendline;'
      parameters:
        - id: type
          description: 'Spécifie le type de courbe de tendance. La valeur par défaut est « Linear ». Pour `ExcelScript.ChartTrendline` plus d’informations, voir.'
          type: '<xref uid="ExcelScript!ExcelScript.ChartTrendlineType:enum" />'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartTrendline:interface" />'
        description: ''
  - name: delete()
    uid: 'ExcelScript!ExcelScript.ChartSeries#delete:member(1)'
    package: ExcelScript!
    fullName: delete()
    summary: Supprime la série graphique.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'delete(): void;'
      return:
        type: void
        description: ''
  - name: getAxisGroup()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getAxisGroup:member(1)'
    package: ExcelScript!
    fullName: getAxisGroup()
    summary: Spécifie le groupe de la série spécifiée.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getAxisGroup(): ChartAxisGroup;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartAxisGroup:enum" />'
        description: ''
  - name: getBinOptions()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getBinOptions:member(1)'
    package: ExcelScript!
    fullName: getBinOptions()
    summary: Encapsule les options bin uniquement pour les histogrammes et graphiques de pareto.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBinOptions(): ChartBinOptions;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartBinOptions:interface" />'
        description: ''
  - name: getBoxwhiskerOptions()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getBoxwhiskerOptions:member(1)'
    package: ExcelScript!
    fullName: getBoxwhiskerOptions()
    summary: Résume les options pour le graphique de zone et valeur.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBoxwhiskerOptions(): ChartBoxwhiskerOptions;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartBoxwhiskerOptions:interface" />'
        description: ''
  - name: getBubbleScale()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getBubbleScale:member(1)'
    package: ExcelScript!
    fullName: getBubbleScale()
    summary: Peut être une valeur d’entier entre 0 (zéro) et 300 correspondant à un pourcentage de la taille par défaut. Cette propriété s'applique uniquement aux graphiques en bulles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getBubbleScale(): number;'
      return:
        type: number
        description: ''
  - name: getChartTrendline(index)
    uid: 'ExcelScript!ExcelScript.ChartSeries#getChartTrendline:member(1)'
    package: ExcelScript!
    fullName: getChartTrendline(index)
    summary: 'Obtient un objet de courbe de tendance par index, qui est l’ordre d’insertion dans le tableau d’éléments.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getChartTrendline(index: number): ChartTrendline;'
      parameters:
        - id: index
          description: Représente l’ordre d’insertion dans le tableau d’éléments.
          type: number
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartTrendline:interface" />'
        description: ''
  - name: getChartType()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getChartType:member(1)'
    package: ExcelScript!
    fullName: getChartType()
    summary: 'Représente le type de graphique d’une série. Pour `ExcelScript.ChartType` plus d’informations, voir.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getChartType(): ChartType;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartType:enum" />'
        description: ''
  - name: getDataLabels()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getDataLabels:member(1)'
    package: ExcelScript!
    fullName: getDataLabels()
    summary: Représente une collection de toutes les étiquettes de données de la série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getDataLabels(): ChartDataLabels;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartDataLabels:interface" />'
        description: ''
  - name: getDimensionValues(dimension)
    uid: 'ExcelScript!ExcelScript.ChartSeries#getDimensionValues:member(1)'
    package: ExcelScript!
    fullName: getDimensionValues(dimension)
    summary: 'Obtient les valeurs d’une dimension unique de la série de graphiques. Il peut s’agit de valeurs de catégorie ou de données, selon la dimension spécifiée et la façon dont les données sont mappées pour la série de graphiques.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getDimensionValues(dimension: ChartSeriesDimension): string[];'
      parameters:
        - id: dimension
          description: Dimension de l’axe d’où viennent les données.
          type: '<xref uid="ExcelScript!ExcelScript.ChartSeriesDimension:enum" />'
      return:
        type: 'string[]'
        description: ''
  - name: getDoughnutHoleSize()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getDoughnutHoleSize:member(1)'
    package: ExcelScript!
    fullName: getDoughnutHoleSize()
    summary: Représente la taille du centre d’une série de graphiques en anneaux. Valide uniquement sur les graphiques en anneau et en anneau. Envoie une erreur `InvalidArgument` sur les graphiques non valides.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getDoughnutHoleSize(): number;'
      return:
        type: number
        description: ''
  - name: getExplosion()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getExplosion:member(1)'
    package: ExcelScript!
    fullName: getExplosion()
    summary: Spécifie la valeur d’explosion d’un graphique en secteurs ou d’une tranche de graphique en doughnuts. Renvoie 0 (zéro) s’il n’y a aucune explosion (la pointe de la coupe est dans le centre du graphique).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getExplosion(): number;'
      return:
        type: number
        description: ''
  - name: getFiltered()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getFiltered:member(1)'
    package: ExcelScript!
    fullName: getFiltered()
    summary: Spécifie si la série est filtrée. Non applicable pour les graphiques en surface.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFiltered(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getFirstSliceAngle()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getFirstSliceAngle:member(1)'
    package: ExcelScript!
    fullName: getFirstSliceAngle()
    summary: 'Spécifie l’angle de la première tranche de graphique en secteurs ou de graphique en doughnuts, en degrés (dans le sens des aiguilles d’une montre à partir de la verticale). S’applique uniquement aux graphiques en secteurs, graphiques en secteurs 3D et graphiques en anneaux. Peut être une valeur comprise entre 0 et 360.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFirstSliceAngle(): number;'
      return:
        type: number
        description: ''
  - name: getFormat()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getFormat:member(1)'
    package: ExcelScript!
    fullName: getFormat()
    summary: 'Représente le format d’une série de graphique, à savoir le format de remplissage et des lignes.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFormat(): ChartSeriesFormat;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartSeriesFormat:interface" />'
        description: ''
  - name: getGapWidth()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGapWidth:member(1)'
    package: ExcelScript!
    fullName: getGapWidth()
    summary: 'Représente la largeur de l’intervalle d’une série de graphique. Valide uniquement sur les graphiques en barres et en colonnes, ainsi que sur des classes spécifiques de graphiques en courbes et en secteurs. Indique une exception d’argument non valide sur les graphiques non valides.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGapWidth(): number;'
      return:
        type: number
        description: ''
  - name: getGradientMaximumColor()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMaximumColor:member(1)'
    package: ExcelScript!
    fullName: getGradientMaximumColor()
    summary: Spécifie la couleur de la valeur maximale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMaximumColor(): string;'
      return:
        type: string
        description: ''
  - name: getGradientMaximumType()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMaximumType:member(1)'
    package: ExcelScript!
    fullName: getGradientMaximumType()
    summary: Spécifie le type de valeur maximale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMaximumType(): ChartGradientStyleType;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartGradientStyleType:enum" />'
        description: ''
  - name: getGradientMaximumValue()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMaximumValue:member(1)'
    package: ExcelScript!
    fullName: getGradientMaximumValue()
    summary: Spécifie la valeur maximale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMaximumValue(): number;'
      return:
        type: number
        description: ''
  - name: getGradientMidpointColor()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMidpointColor:member(1)'
    package: ExcelScript!
    fullName: getGradientMidpointColor()
    summary: Spécifie la couleur de la valeur du milieu d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMidpointColor(): string;'
      return:
        type: string
        description: ''
  - name: getGradientMidpointType()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMidpointType:member(1)'
    package: ExcelScript!
    fullName: getGradientMidpointType()
    summary: Spécifie le type de la valeur de milieu d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMidpointType(): ChartGradientStyleType;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartGradientStyleType:enum" />'
        description: ''
  - name: getGradientMidpointValue()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMidpointValue:member(1)'
    package: ExcelScript!
    fullName: getGradientMidpointValue()
    summary: Spécifie la valeur du milieu d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMidpointValue(): number;'
      return:
        type: number
        description: ''
  - name: getGradientMinimumColor()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMinimumColor:member(1)'
    package: ExcelScript!
    fullName: getGradientMinimumColor()
    summary: Spécifie la couleur de la valeur minimale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMinimumColor(): string;'
      return:
        type: string
        description: ''
  - name: getGradientMinimumType()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMinimumType:member(1)'
    package: ExcelScript!
    fullName: getGradientMinimumType()
    summary: Spécifie le type de la valeur minimale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMinimumType(): ChartGradientStyleType;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartGradientStyleType:enum" />'
        description: ''
  - name: getGradientMinimumValue()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientMinimumValue:member(1)'
    package: ExcelScript!
    fullName: getGradientMinimumValue()
    summary: Spécifie la valeur minimale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientMinimumValue(): number;'
      return:
        type: number
        description: ''
  - name: getGradientStyle()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getGradientStyle:member(1)'
    package: ExcelScript!
    fullName: getGradientStyle()
    summary: Spécifie le style de dégradé de série d’un graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getGradientStyle(): ChartGradientStyle;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartGradientStyle:enum" />'
        description: ''
  - name: getHasDataLabels()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getHasDataLabels:member(1)'
    package: ExcelScript!
    fullName: getHasDataLabels()
    summary: Spécifie si la série possède des étiquettes de données.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getHasDataLabels(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getInvertColor()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getInvertColor:member(1)'
    package: ExcelScript!
    fullName: getInvertColor()
    summary: Spécifie la couleur de remplissage des points de données négatifs d’une série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getInvertColor(): string;'
      return:
        type: string
        description: ''
  - name: getInvertIfNegative()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getInvertIfNegative:member(1)'
    package: ExcelScript!
    fullName: getInvertIfNegative()
    summary: True si Excel inverse le motif dans l’élément lorsqu’il correspond à un nombre négatif.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getInvertIfNegative(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getMapOptions()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getMapOptions:member(1)'
    package: ExcelScript!
    fullName: getMapOptions()
    summary: Encapsule les options pour le graphique carte de région.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getMapOptions(): ChartMapOptions;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartMapOptions:interface" />'
        description: ''
  - name: getMarkerBackgroundColor()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getMarkerBackgroundColor:member(1)'
    package: ExcelScript!
    fullName: getMarkerBackgroundColor()
    summary: Spécifie la couleur d’arrière-plan du marqueur d’une série de graphiques.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getMarkerBackgroundColor(): string;'
      return:
        type: string
        description: ''
  - name: getMarkerForegroundColor()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getMarkerForegroundColor:member(1)'
    package: ExcelScript!
    fullName: getMarkerForegroundColor()
    summary: Spécifie la couleur de premier plan du marqueur d’une série de graphiques.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getMarkerForegroundColor(): string;'
      return:
        type: string
        description: ''
  - name: getMarkerSize()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getMarkerSize:member(1)'
    package: ExcelScript!
    fullName: getMarkerSize()
    summary: Spécifie la taille de marqueur d’une série de graphiques.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getMarkerSize(): number;'
      return:
        type: number
        description: ''
  - name: getMarkerStyle()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getMarkerStyle:member(1)'
    package: ExcelScript!
    fullName: getMarkerStyle()
    summary: 'Spécifie le style de marqueur d’une série de graphiques. Pour `ExcelScript.ChartMarkerStyle` plus d’informations, voir.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getMarkerStyle(): ChartMarkerStyle;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartMarkerStyle:enum" />'
        description: ''
  - name: getName()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getName:member(1)'
    package: ExcelScript!
    fullName: getName()
    summary: Spécifie le nom d’une série dans un graphique. La longueur du nom ne doit pas être supérieure à 255 caractères.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getName(): string;'
      return:
        type: string
        description: |-


          #### <a name="examples"></a>Exemples

          ```TypeScript
          /**
           * This sample logs the names of each of the chart series in a chart named "ColumnClusteredChart".
           */
          function main(workbook: ExcelScript.Workbook) {
            // Get the current worksheet.
            let selectedSheet = workbook.getActiveWorksheet();

            // Get an existing chart named "ColumnClusteredChart".
            let chart = selectedSheet.getChart("ColumnClusteredChart");

            // Log the name of each chart series in the chart.
            let seriesList = chart.getSeries();
            seriesList.forEach((series) => {
              console.log(series.getName());
            });
          }
          ```
  - name: getOverlap()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getOverlap:member(1)'
    package: ExcelScript!
    fullName: getOverlap()
    summary: Spécifie comment barres et colonnes sont positionnées. Il peut s’agit d’une valeur entre –100 et 100. S’applique uniquement aux graphiques en barres 2D et en colonnes 2D.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getOverlap(): number;'
      return:
        type: number
        description: ''
  - name: getParentLabelStrategy()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getParentLabelStrategy:member(1)'
    package: ExcelScript!
    fullName: getParentLabelStrategy()
    summary: Spécifie la zone de stratégie des étiquettes parentes de série pour un graphique en arborescence.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getParentLabelStrategy(): ChartParentLabelStrategy;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartParentLabelStrategy:enum" />'
        description: ''
  - name: getPlotOrder()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getPlotOrder:member(1)'
    package: ExcelScript!
    fullName: getPlotOrder()
    summary: Spécifie l’ordre de traçage d’une série de graphiques dans le groupe de graphiques.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPlotOrder(): number;'
      return:
        type: number
        description: ''
  - name: getPoints()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getPoints:member(1)'
    package: ExcelScript!
    fullName: getPoints()
    summary: Renvoie une collection de tous les points de la série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPoints(): ChartPoint[];'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartPoint:interface" />[]'
        description: ''
  - name: getSecondPlotSize()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getSecondPlotSize:member(1)'
    package: ExcelScript!
    fullName: getSecondPlotSize()
    summary: 'Spécifie la taille de la section secondaire d’un graphique en secteurs de secteur ou d’un graphique en barres de secteur, sous forme de pourcentage de la taille du secteur principal. Peut être une valeur comprise entre 5 et 200.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSecondPlotSize(): number;'
      return:
        type: number
        description: ''
  - name: getShowConnectorLines()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getShowConnectorLines:member(1)'
    package: ExcelScript!
    fullName: getShowConnectorLines()
    summary: Spécifie si les lignes de connecteur sont affichées dans les graphiques en cascade.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getShowConnectorLines(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getShowLeaderLines()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getShowLeaderLines:member(1)'
    package: ExcelScript!
    fullName: getShowLeaderLines()
    summary: Spécifie si les lignes d’étiquettes sont affichées pour chaque étiquette de données de la série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getShowLeaderLines(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getShowShadow()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getShowShadow:member(1)'
    package: ExcelScript!
    fullName: getShowShadow()
    summary: Spécifie si la série possède une ombre.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getShowShadow(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getSmooth()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getSmooth:member(1)'
    package: ExcelScript!
    fullName: getSmooth()
    summary: Spécifie si la série est lisse. Applicable uniquement aux graphiques en courbes et en nuages de points.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSmooth(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getSplitType()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getSplitType:member(1)'
    package: ExcelScript!
    fullName: getSplitType()
    summary: Spécifie le mode de fractionnement des deux sections d’un graphique en secteurs de secteur ou d’un graphique en barres de secteur.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSplitType(): ChartSplitType;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartSplitType:enum" />'
        description: ''
  - name: getSplitValue()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getSplitValue:member(1)'
    package: ExcelScript!
    fullName: getSplitValue()
    summary: Spécifie la valeur de seuil qui sépare deux sections d’un graphique en secteurs de secteur ou d’un graphique en barres de secteur.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSplitValue(): number;'
      return:
        type: number
        description: ''
  - name: getTrendlines()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getTrendlines:member(1)'
    package: ExcelScript!
    fullName: getTrendlines()
    summary: Collection des tendances de la série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getTrendlines(): ChartTrendline[];'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartTrendline:interface" />[]'
        description: ''
  - name: getVaryByCategories()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getVaryByCategories:member(1)'
    package: ExcelScript!
    fullName: getVaryByCategories()
    summary: True si Excel affecte une couleur ou un motif différent à chaque marqueur de données. Le graphique ne doit contenir qu’une seule série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getVaryByCategories(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getXErrorBars()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getXErrorBars:member(1)'
    package: ExcelScript!
    fullName: getXErrorBars()
    summary: Représente l’objet de la barre d’erreur pour une série de graphique.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getXErrorBars(): ChartErrorBars;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartErrorBars:interface" />'
        description: ''
  - name: getYErrorBars()
    uid: 'ExcelScript!ExcelScript.ChartSeries#getYErrorBars:member(1)'
    package: ExcelScript!
    fullName: getYErrorBars()
    summary: Représente l’objet de la barre d’erreur pour une série de graphique.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getYErrorBars(): ChartErrorBars;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.ChartErrorBars:interface" />'
        description: ''
  - name: setAxisGroup(axisGroup)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setAxisGroup:member(1)'
    package: ExcelScript!
    fullName: setAxisGroup(axisGroup)
    summary: Spécifie le groupe de la série spécifiée.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setAxisGroup(axisGroup: ChartAxisGroup): void;'
      parameters:
        - id: axisGroup
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartAxisGroup:enum" />'
      return:
        type: void
        description: ''
  - name: setBubbleScale(bubbleScale)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setBubbleScale:member(1)'
    package: ExcelScript!
    fullName: setBubbleScale(bubbleScale)
    summary: Peut être une valeur d’entier entre 0 (zéro) et 300 correspondant à un pourcentage de la taille par défaut. Cette propriété s'applique uniquement aux graphiques en bulles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setBubbleScale(bubbleScale: number): void;'
      parameters:
        - id: bubbleScale
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setBubbleSizes(sourceData)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setBubbleSizes:member(1)'
    package: ExcelScript!
    fullName: setBubbleSizes(sourceData)
    summary: Définit les tailles des bulles pour une série de graphiques. Fonctionne uniquement pour les graphiques en bulles.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      parameters:
        - id: sourceData
          description: Objet `Range` correspondant aux données sources.
          type: '<xref uid="ExcelScript!ExcelScript.Range:interface" />'
      return:
        type: void
        description: ''
  - name: setChartType(chartType)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setChartType:member(1)'
    package: ExcelScript!
    fullName: setChartType(chartType)
    summary: 'Représente le type de graphique d’une série. Pour `ExcelScript.ChartType` plus d’informations, voir.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setChartType(chartType: ChartType): void;'
      parameters:
        - id: chartType
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartType:enum" />'
      return:
        type: void
        description: ''
  - name: setDoughnutHoleSize(doughnutHoleSize)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setDoughnutHoleSize:member(1)'
    package: ExcelScript!
    fullName: setDoughnutHoleSize(doughnutHoleSize)
    summary: Représente la taille du centre d’une série de graphiques en anneaux. Valide uniquement sur les graphiques en anneau et en anneau. Envoie une erreur `InvalidArgument` sur les graphiques non valides.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setDoughnutHoleSize(doughnutHoleSize: number): void;'
      parameters:
        - id: doughnutHoleSize
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setExplosion(explosion)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setExplosion:member(1)'
    package: ExcelScript!
    fullName: setExplosion(explosion)
    summary: Spécifie la valeur d’explosion d’un graphique en secteurs ou d’une tranche de graphique en doughnuts. Renvoie 0 (zéro) s’il n’y a aucune explosion (la pointe de la coupe est dans le centre du graphique).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setExplosion(explosion: number): void;'
      parameters:
        - id: explosion
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setFiltered(filtered)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setFiltered:member(1)'
    package: ExcelScript!
    fullName: setFiltered(filtered)
    summary: Spécifie si la série est filtrée. Non applicable pour les graphiques en surface.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setFiltered(filtered: boolean): void;'
      parameters:
        - id: filtered
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setFirstSliceAngle(firstSliceAngle)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setFirstSliceAngle:member(1)'
    package: ExcelScript!
    fullName: setFirstSliceAngle(firstSliceAngle)
    summary: 'Spécifie l’angle de la première tranche de graphique en secteurs ou de graphique en doughnuts, en degrés (dans le sens des aiguilles d’une montre à partir de la verticale). S’applique uniquement aux graphiques en secteurs, graphiques en secteurs 3D et graphiques en anneaux. Peut être une valeur comprise entre 0 et 360.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setFirstSliceAngle(firstSliceAngle: number): void;'
      parameters:
        - id: firstSliceAngle
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setGapWidth(gapWidth)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGapWidth:member(1)'
    package: ExcelScript!
    fullName: setGapWidth(gapWidth)
    summary: 'Représente la largeur de l’intervalle d’une série de graphique. Valide uniquement sur les graphiques en barres et en colonnes, ainsi que sur des classes spécifiques de graphiques en courbes et en secteurs. Indique une exception d’argument non valide sur les graphiques non valides.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setGapWidth(gapWidth: number): void;'
      parameters:
        - id: gapWidth
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setGradientMaximumColor(gradientMaximumColor)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMaximumColor:member(1)'
    package: ExcelScript!
    fullName: setGradientMaximumColor(gradientMaximumColor)
    summary: Spécifie la couleur de la valeur maximale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setGradientMaximumColor(gradientMaximumColor: string): void;'
      parameters:
        - id: gradientMaximumColor
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setGradientMaximumType(gradientMaximumType)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMaximumType:member(1)'
    package: ExcelScript!
    fullName: setGradientMaximumType(gradientMaximumType)
    summary: Spécifie le type de valeur maximale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        setGradientMaximumType(
                    gradientMaximumType: ChartGradientStyleType
                ): void;
      parameters:
        - id: gradientMaximumType
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartGradientStyleType:enum" />'
      return:
        type: void
        description: ''
  - name: setGradientMaximumValue(gradientMaximumValue)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMaximumValue:member(1)'
    package: ExcelScript!
    fullName: setGradientMaximumValue(gradientMaximumValue)
    summary: Spécifie la valeur maximale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setGradientMaximumValue(gradientMaximumValue: number): void;'
      parameters:
        - id: gradientMaximumValue
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setGradientMidpointColor(gradientMidpointColor)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMidpointColor:member(1)'
    package: ExcelScript!
    fullName: setGradientMidpointColor(gradientMidpointColor)
    summary: Spécifie la couleur de la valeur du milieu d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setGradientMidpointColor(gradientMidpointColor: string): void;'
      parameters:
        - id: gradientMidpointColor
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setGradientMidpointType(gradientMidpointType)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMidpointType:member(1)'
    package: ExcelScript!
    fullName: setGradientMidpointType(gradientMidpointType)
    summary: Spécifie le type de la valeur de milieu d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        setGradientMidpointType(
                    gradientMidpointType: ChartGradientStyleType
                ): void;
      parameters:
        - id: gradientMidpointType
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartGradientStyleType:enum" />'
      return:
        type: void
        description: ''
  - name: setGradientMidpointValue(gradientMidpointValue)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMidpointValue:member(1)'
    package: ExcelScript!
    fullName: setGradientMidpointValue(gradientMidpointValue)
    summary: Spécifie la valeur du milieu d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setGradientMidpointValue(gradientMidpointValue: number): void;'
      parameters:
        - id: gradientMidpointValue
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setGradientMinimumColor(gradientMinimumColor)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMinimumColor:member(1)'
    package: ExcelScript!
    fullName: setGradientMinimumColor(gradientMinimumColor)
    summary: Spécifie la couleur de la valeur minimale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setGradientMinimumColor(gradientMinimumColor: string): void;'
      parameters:
        - id: gradientMinimumColor
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setGradientMinimumType(gradientMinimumType)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMinimumType:member(1)'
    package: ExcelScript!
    fullName: setGradientMinimumType(gradientMinimumType)
    summary: Spécifie le type de la valeur minimale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        setGradientMinimumType(
                    gradientMinimumType: ChartGradientStyleType
                ): void;
      parameters:
        - id: gradientMinimumType
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartGradientStyleType:enum" />'
      return:
        type: void
        description: ''
  - name: setGradientMinimumValue(gradientMinimumValue)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientMinimumValue:member(1)'
    package: ExcelScript!
    fullName: setGradientMinimumValue(gradientMinimumValue)
    summary: Spécifie la valeur minimale d’une série de graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setGradientMinimumValue(gradientMinimumValue: number): void;'
      parameters:
        - id: gradientMinimumValue
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setGradientStyle(gradientStyle)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setGradientStyle:member(1)'
    package: ExcelScript!
    fullName: setGradientStyle(gradientStyle)
    summary: Spécifie le style de dégradé de série d’un graphique région carte.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setGradientStyle(gradientStyle: ChartGradientStyle): void;'
      parameters:
        - id: gradientStyle
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartGradientStyle:enum" />'
      return:
        type: void
        description: ''
  - name: setHasDataLabels(hasDataLabels)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setHasDataLabels:member(1)'
    package: ExcelScript!
    fullName: setHasDataLabels(hasDataLabels)
    summary: Spécifie si la série possède des étiquettes de données.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setHasDataLabels(hasDataLabels: boolean): void;'
      parameters:
        - id: hasDataLabels
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setInvertColor(invertColor)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setInvertColor:member(1)'
    package: ExcelScript!
    fullName: setInvertColor(invertColor)
    summary: Spécifie la couleur de remplissage des points de données négatifs d’une série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setInvertColor(invertColor: string): void;'
      parameters:
        - id: invertColor
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setInvertIfNegative(invertIfNegative)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setInvertIfNegative:member(1)'
    package: ExcelScript!
    fullName: setInvertIfNegative(invertIfNegative)
    summary: True si Excel inverse le motif dans l’élément lorsqu’il correspond à un nombre négatif.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setInvertIfNegative(invertIfNegative: boolean): void;'
      parameters:
        - id: invertIfNegative
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setMarkerBackgroundColor(markerBackgroundColor)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setMarkerBackgroundColor:member(1)'
    package: ExcelScript!
    fullName: setMarkerBackgroundColor(markerBackgroundColor)
    summary: Spécifie la couleur d’arrière-plan du marqueur d’une série de graphiques.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setMarkerBackgroundColor(markerBackgroundColor: string): void;'
      parameters:
        - id: markerBackgroundColor
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setMarkerForegroundColor(markerForegroundColor)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setMarkerForegroundColor:member(1)'
    package: ExcelScript!
    fullName: setMarkerForegroundColor(markerForegroundColor)
    summary: Spécifie la couleur de premier plan du marqueur d’une série de graphiques.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setMarkerForegroundColor(markerForegroundColor: string): void;'
      parameters:
        - id: markerForegroundColor
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setMarkerSize(markerSize)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setMarkerSize:member(1)'
    package: ExcelScript!
    fullName: setMarkerSize(markerSize)
    summary: Spécifie la taille de marqueur d’une série de graphiques.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setMarkerSize(markerSize: number): void;'
      parameters:
        - id: markerSize
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setMarkerStyle(markerStyle)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setMarkerStyle:member(1)'
    package: ExcelScript!
    fullName: setMarkerStyle(markerStyle)
    summary: 'Spécifie le style de marqueur d’une série de graphiques. Pour `ExcelScript.ChartMarkerStyle` plus d’informations, voir.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setMarkerStyle(markerStyle: ChartMarkerStyle): void;'
      parameters:
        - id: markerStyle
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartMarkerStyle:enum" />'
      return:
        type: void
        description: ''
  - name: setName(name)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setName:member(1)'
    package: ExcelScript!
    fullName: setName(name)
    summary: Spécifie le nom d’une série dans un graphique. La longueur du nom ne doit pas être supérieure à 255 caractères.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setName(name: string): void;'
      parameters:
        - id: name
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setOverlap(overlap)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setOverlap:member(1)'
    package: ExcelScript!
    fullName: setOverlap(overlap)
    summary: Spécifie comment barres et colonnes sont positionnées. Il peut s’agit d’une valeur entre –100 et 100. S’applique uniquement aux graphiques en barres 2D et en colonnes 2D.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setOverlap(overlap: number): void;'
      parameters:
        - id: overlap
          description: ''
          type: number
      return:
        type: void
        description: |-


          #### <a name="examples"></a>Exemples

          ```TypeScript
          /**
           * This sample sets the overlap of the columns in a chart named "ColumnClusteredChart".
           */
          function main(workbook: ExcelScript.Workbook) {
            // Get the current worksheet.
            let selectedSheet = workbook.getActiveWorksheet();

            // Get an existing chart named "ColumnClusteredChart".
            let chart = selectedSheet.getChart("ColumnClusteredChart");

            // Set the overlap of every column of each series within a category.
            let seriesList = chart.getSeries();
            seriesList.forEach((series) => {
              // An overlap of 25 means the columns have 25% of their length overlapping with the adjacent columns in the same category.
              series.setOverlap(25);
            });
          }
          ```
  - name: setParentLabelStrategy(parentLabelStrategy)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setParentLabelStrategy:member(1)'
    package: ExcelScript!
    fullName: setParentLabelStrategy(parentLabelStrategy)
    summary: Spécifie la zone de stratégie des étiquettes parentes de série pour un graphique en arborescence.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        setParentLabelStrategy(
                    parentLabelStrategy: ChartParentLabelStrategy
                ): void;
      parameters:
        - id: parentLabelStrategy
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartParentLabelStrategy:enum" />'
      return:
        type: void
        description: ''
  - name: setPlotOrder(plotOrder)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setPlotOrder:member(1)'
    package: ExcelScript!
    fullName: setPlotOrder(plotOrder)
    summary: Spécifie l’ordre de traçage d’une série de graphiques dans le groupe de graphiques.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setPlotOrder(plotOrder: number): void;'
      parameters:
        - id: plotOrder
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setSecondPlotSize(secondPlotSize)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setSecondPlotSize:member(1)'
    package: ExcelScript!
    fullName: setSecondPlotSize(secondPlotSize)
    summary: 'Spécifie la taille de la section secondaire d’un graphique en secteurs de secteur ou d’un graphique en barres de secteur, sous forme de pourcentage de la taille du secteur principal. Peut être une valeur comprise entre 5 et 200.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setSecondPlotSize(secondPlotSize: number): void;'
      parameters:
        - id: secondPlotSize
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setShowConnectorLines(showConnectorLines)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setShowConnectorLines:member(1)'
    package: ExcelScript!
    fullName: setShowConnectorLines(showConnectorLines)
    summary: Spécifie si les lignes de connecteur sont affichées dans les graphiques en cascade.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setShowConnectorLines(showConnectorLines: boolean): void;'
      parameters:
        - id: showConnectorLines
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setShowLeaderLines(showLeaderLines)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setShowLeaderLines:member(1)'
    package: ExcelScript!
    fullName: setShowLeaderLines(showLeaderLines)
    summary: Spécifie si les lignes d’étiquettes sont affichées pour chaque étiquette de données de la série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setShowLeaderLines(showLeaderLines: boolean): void;'
      parameters:
        - id: showLeaderLines
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setShowShadow(showShadow)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setShowShadow:member(1)'
    package: ExcelScript!
    fullName: setShowShadow(showShadow)
    summary: Spécifie si la série possède une ombre.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setShowShadow(showShadow: boolean): void;'
      parameters:
        - id: showShadow
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setSmooth(smooth)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setSmooth:member(1)'
    package: ExcelScript!
    fullName: setSmooth(smooth)
    summary: Spécifie si la série est lisse. Applicable uniquement aux graphiques en courbes et en nuages de points.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setSmooth(smooth: boolean): void;'
      parameters:
        - id: smooth
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setSplitType(splitType)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setSplitType:member(1)'
    package: ExcelScript!
    fullName: setSplitType(splitType)
    summary: Spécifie le mode de fractionnement des deux sections d’un graphique en secteurs de secteur ou d’un graphique en barres de secteur.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setSplitType(splitType: ChartSplitType): void;'
      parameters:
        - id: splitType
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.ChartSplitType:enum" />'
      return:
        type: void
        description: ''
  - name: setSplitValue(splitValue)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setSplitValue:member(1)'
    package: ExcelScript!
    fullName: setSplitValue(splitValue)
    summary: Spécifie la valeur de seuil qui sépare deux sections d’un graphique en secteurs de secteur ou d’un graphique en barres de secteur.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setSplitValue(splitValue: number): void;'
      parameters:
        - id: splitValue
          description: ''
          type: number
      return:
        type: void
        description: ''
  - name: setValues(sourceData)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setValues:member(1)'
    package: ExcelScript!
    fullName: setValues(sourceData)
    summary: 'Définit les valeurs d’une série de graphiques. Pour les graphiques en nuages de points, il fait référence aux valeurs de l’axe y.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setValues(sourceData: Range): void;'
      parameters:
        - id: sourceData
          description: Objet `Range` correspondant aux données sources.
          type: '<xref uid="ExcelScript!ExcelScript.Range:interface" />'
      return:
        type: void
        description: ''
  - name: setVaryByCategories(varyByCategories)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setVaryByCategories:member(1)'
    package: ExcelScript!
    fullName: setVaryByCategories(varyByCategories)
    summary: True si Excel affecte une couleur ou un motif différent à chaque marqueur de données. Le graphique ne doit contenir qu’une seule série.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setVaryByCategories(varyByCategories: boolean): void;'
      parameters:
        - id: varyByCategories
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setXAxisValues(sourceData)
    uid: 'ExcelScript!ExcelScript.ChartSeries#setXAxisValues:member(1)'
    package: ExcelScript!
    fullName: setXAxisValues(sourceData)
    summary: Définit les valeurs de l’axe des x pour une série de graphiques. Fonctionne uniquement pour les graphiques en nuages de points.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      parameters:
        - id: sourceData
          description: Objet `Range` correspondant aux données sources.
          type: '<xref uid="ExcelScript!ExcelScript.Range:interface" />'
      return:
        type: void
        description: ''