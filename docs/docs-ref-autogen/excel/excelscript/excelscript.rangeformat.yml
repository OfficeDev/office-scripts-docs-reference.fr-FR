### YamlMime:TSType
name: ExcelScript.RangeFormat
uid: ExcelScript!ExcelScript.RangeFormat:interface
package: ExcelScript!
fullName: ExcelScript.RangeFormat
summary: Objet de format qui comprend les propriétés de police, de remplissage, de bordures, d’alignement et d’autres propriétés de la plage.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: adjustIndent(amount)
  uid: ExcelScript!ExcelScript.RangeFormat#adjustIndent:member(1)
  package: ExcelScript!
  fullName: adjustIndent(amount)
  summary: Ajuste le retrait de la mise en forme de plage. La valeur du retrait est de 0 à 250 et est mesurée en caractères.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'adjustIndent(amount: number): void;'
    parameters:
    - id: amount
      description: 'Nombre d’espaces de caractères par lequel le retrait actuel est ajusté. Cette valeur doit être entre -250 et 250. **Remarque** : si le montant augmente le niveau de retrait au-dessus de 250, le niveau de retrait reste avec 250. De même, si le montant réduit le niveau de retrait en dessous de 0, le niveau de retrait reste 0.'
      type: number
    return:
      type: void
      description: ''
- name: autofitColumns()
  uid: ExcelScript!ExcelScript.RangeFormat#autofitColumns:member(1)
  package: ExcelScript!
  fullName: autofitColumns()
  summary: Modifie la largeur des colonnes de la plage active pour obtenir le meilleur ajustement, en fonction des données présentes dans les colonnes.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'autofitColumns(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script creates a new table from existing data and autofits the columns.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // Create the table.\n  const table = currentSheet.addTable(usedRange, true);\n\n  // Format the table columns.\n  table.getRange().getFormat().autofitColumns();\n}\n```"
- name: autofitRows()
  uid: ExcelScript!ExcelScript.RangeFormat#autofitRows:member(1)
  package: ExcelScript!
  fullName: autofitRows()
  summary: Modifie la hauteur des lignes de la plage active pour obtenir le meilleur ajustement, en fonction des données présentes dans les colonnes.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'autofitRows(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script creates a new table from existing data and autofits the rows.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // Create the table.\n  const table = currentSheet.addTable(usedRange, true);\n\n  // Format the table rows.\n  table.getRange().getFormat().autofitRows();\n}\n```"
- name: getAutoIndent()
  uid: ExcelScript!ExcelScript.RangeFormat#getAutoIndent:member(1)
  package: ExcelScript!
  fullName: getAutoIndent()
  summary: Spécifie si le texte est automatiquement mis en retrait lorsque l’alignement du texte est égal à la distribution.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAutoIndent(): boolean;'
    return:
      type: boolean
      description: ''
- name: getBorders()
  uid: ExcelScript!ExcelScript.RangeFormat#getBorders:member(1)
  package: ExcelScript!
  fullName: getBorders()
  summary: Collection d’objets de bordure qui s’appliquent à l’ensemble de la plage.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBorders(): RangeBorder[];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeBorder:interface" />[]
      description: ''
- name: getColumnWidth()
  uid: ExcelScript!ExcelScript.RangeFormat#getColumnWidth:member(1)
  package: ExcelScript!
  fullName: getColumnWidth()
  summary: Spécifie la largeur de toutes les colums dans la plage. Si les largeurs de colonne ne sont pas uniformes, `null` elles sont renvoyées.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnWidth(): number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script doubles the column width for every column in the active worksheet's used range.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // To optimize performance, get all the current row heights before setting them.\n  let currentWidths = Array<number>(usedRange.getColumnCount());\n  for (let column = 0; column < currentWidths.length; column++) {\n    currentWidths[column] = usedRange.getColumn(column).getFormat().getColumnWidth();\n  }\n\n  // Set the new column widths.\n  for (let column = 0; column < currentWidths.length; column++) {\n    usedRange.getFormat().setColumnWidth(currentWidths[column] * 2);\n  }\n```"
- name: getFill()
  uid: ExcelScript!ExcelScript.RangeFormat#getFill:member(1)
  package: ExcelScript!
  fullName: getFill()
  summary: Renvoie l’objet de remplissage défini sur la plage globale.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFill(): RangeFill;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeFill:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script gives the total row of a table a green color fill.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the first table in the workbook.\n  let table = workbook.getTables()[0];\n\n  // Get the range for the total row of the table.\n  let totalRange = table.getTotalRowRange();\n\n  // Set the fill color to green.\n  totalRange.getFormat().getFill().setColor(\"green\");\n}\n```"
- name: getFont()
  uid: ExcelScript!ExcelScript.RangeFormat#getFont:member(1)
  package: ExcelScript!
  fullName: getFont()
  summary: Renvoie l’objet de police défini sur l’ensemble de la plage.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFont(): RangeFont;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeFont:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script bolds the text of cell A1.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get A1 on the current worksheet.\n  const cell = workbook.getActiveWorksheet().getCell(0,0);\n\n  // Bold the font for that cell\n  cell.getFormat().getFont().setBold(true);\n}\n```"
- name: getHorizontalAlignment()
  uid: ExcelScript!ExcelScript.RangeFormat#getHorizontalAlignment:member(1)
  package: ExcelScript!
  fullName: getHorizontalAlignment()
  summary: Représente l’alignement horizontal de l’objet spécifié. Pour plus `ExcelScript.HorizontalAlignment` d’informations, voir.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHorizontalAlignment(): HorizontalAlignment;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.HorizontalAlignment:enum" />
      description: ''
- name: getIndentLevel()
  uid: ExcelScript!ExcelScript.RangeFormat#getIndentLevel:member(1)
  package: ExcelScript!
  fullName: getIndentLevel()
  summary: Entier compris entre 0 à 250 qui indique le niveau de retrait du style.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIndentLevel(): number;'
    return:
      type: number
      description: ''
- name: getProtection()
  uid: ExcelScript!ExcelScript.RangeFormat#getProtection:member(1)
  package: ExcelScript!
  fullName: getProtection()
  summary: Renvoie l’objet de protection du format pour une plage.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getProtection(): FormatProtection;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.FormatProtection:interface" />
      description: ''
- name: getRangeBorder(index)
  uid: ExcelScript!ExcelScript.RangeFormat#getRangeBorder:member(1)
  package: ExcelScript!
  fullName: getRangeBorder(index)
  summary: Obtient un objet de bordure à l’aide de son nom.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeBorder(index: BorderIndex): RangeBorder;'
    parameters:
    - id: index
      description: Valeur d’indice de l’objet de bordure à récupérer. Pour plus `ExcelScript.BorderIndex` d’informations, voir.
      type: <xref uid="ExcelScript!ExcelScript.BorderIndex:enum" />
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeBorder:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script adds a border around the outside of a range.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get a range from the current worksheet.\n  let range = workbook.getActiveWorksheet().getRange(\"B2:E15\");\n\n  // Add a border around the whole bounding range.\n  let format = range.getFormat();\n  format.getRangeBorder(ExcelScript.BorderIndex.edgeTop).setStyle(ExcelScript.BorderLineStyle.continuous); // Top border\n  format.getRangeBorder(ExcelScript.BorderIndex.edgeBottom).setStyle(ExcelScript.BorderLineStyle.continuous); // Bottom border\n  format.getRangeBorder(ExcelScript.BorderIndex.edgeLeft).setStyle(ExcelScript.BorderLineStyle.continuous); // Left border\n  format.getRangeBorder(ExcelScript.BorderIndex.edgeRight).setStyle(ExcelScript.BorderLineStyle.continuous); // Right border\n}\n```"
- name: getRangeBorderTintAndShade()
  uid: ExcelScript!ExcelScript.RangeFormat#getRangeBorderTintAndShade:member(1)
  package: ExcelScript!
  fullName: getRangeBorderTintAndShade()
  summary: Spécifie un double qui s’éclaircit ou assombrit une couleur pour les bordures de plage. La valeur est entre -1 (plus sombre) et 1 (plus clair), avec 0 pour la couleur d’origine. Une `null` valeur indique que l’ensemble de la collection de bordures n’a pas de paramètre `tintAndShade` uniforme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeBorderTintAndShade(): number;'
    return:
      type: number
      description: ''
- name: getReadingOrder()
  uid: ExcelScript!ExcelScript.RangeFormat#getReadingOrder:member(1)
  package: ExcelScript!
  fullName: getReadingOrder()
  summary: L’ordre de lecture de la plage.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getReadingOrder(): ReadingOrder;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ReadingOrder:enum" />
      description: ''
- name: getRowHeight()
  uid: ExcelScript!ExcelScript.RangeFormat#getRowHeight:member(1)
  package: ExcelScript!
  fullName: getRowHeight()
  summary: Hauteur de toutes les lignes de la plage. Si les hauteurs de ligne ne sont pas uniformes, `null` elles sont renvoyées.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowHeight(): number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script doubles the row height for every row in the active worksheet's used range.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // To optimize performance, get all the current row heights before setting them.\n  let currentHeights = Array<number>(usedRange.getRowCount());\n  for (let row = 0; row < currentHeights.length; row++) {\n    currentHeights[row] = usedRange.getRow(row).getFormat().getRowHeight();\n  }\n\n  // Set the new row heights.\n  for (let row = 0; row < currentHeights.length; row++) {\n    usedRange.getFormat().setRowHeight(currentHeights[row] * 2);\n  }\n}\n```"
- name: getShrinkToFit()
  uid: ExcelScript!ExcelScript.RangeFormat#getShrinkToFit:member(1)
  package: ExcelScript!
  fullName: getShrinkToFit()
  summary: Spécifie si le texte est automatiquement réduit pour tenir dans la largeur de colonne disponible.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getShrinkToFit(): boolean;'
    return:
      type: boolean
      description: ''
- name: getTextOrientation()
  uid: ExcelScript!ExcelScript.RangeFormat#getTextOrientation:member(1)
  package: ExcelScript!
  fullName: getTextOrientation()
  summary: Orientation du texte de toutes les cellules de la plage. L’orientation du texte doit être un integer soit de -90 à 90, soit de 180 pour le texte orienté verticalement. Si l’orientation au sein d’une plage n’est pas uniforme, `null` elle est renvoyée.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTextOrientation(): number;'
    return:
      type: number
      description: ''
- name: getUseStandardHeight()
  uid: ExcelScript!ExcelScript.RangeFormat#getUseStandardHeight:member(1)
  package: ExcelScript!
  fullName: getUseStandardHeight()
  summary: 'Détermine si la hauteur de ligne de l’objet `Range` est égale à la hauteur standard de la feuille. Renvoie `true` si la hauteur de ligne de l’objet `Range` est égale à la hauteur standard de la feuille. Renvoie `null` si la plage contient plusieurs lignes et que les lignes ne sont pas toutes de la même hauteur. Renvoie dans le `false` cas contraire. Remarque : cette propriété est uniquement destinée à être définie sur `true`<!-- -->. Sa définition n’a `false` aucun effet.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUseStandardHeight(): boolean;'
    return:
      type: boolean
      description: ''
- name: getUseStandardWidth()
  uid: ExcelScript!ExcelScript.RangeFormat#getUseStandardWidth:member(1)
  package: ExcelScript!
  fullName: getUseStandardWidth()
  summary: 'Spécifie si la largeur de colonne de l’objet `Range` est égale à la largeur standard de la feuille. Renvoie `true` si la largeur de colonne de l’objet `Range` est égale à la largeur standard de la feuille. Renvoie `null` si la plage contient plusieurs colonnes et que les colonnes ne sont pas toutes de la même hauteur. Renvoie dans le `false` cas contraire. Remarque : cette propriété est uniquement destinée à être définie sur `true`<!-- -->. Sa définition n’a `false` aucun effet.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUseStandardWidth(): boolean;'
    return:
      type: boolean
      description: ''
- name: getVerticalAlignment()
  uid: ExcelScript!ExcelScript.RangeFormat#getVerticalAlignment:member(1)
  package: ExcelScript!
  fullName: getVerticalAlignment()
  summary: Représente l’alignement vertical de l’objet spécifié. Pour plus `ExcelScript.VerticalAlignment` d’informations, voir.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getVerticalAlignment(): VerticalAlignment;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.VerticalAlignment:enum" />
      description: ''
- name: getWrapText()
  uid: ExcelScript!ExcelScript.RangeFormat#getWrapText:member(1)
  package: ExcelScript!
  fullName: getWrapText()
  summary: Spécifie si Excel le texte dans l’objet. Une `null` valeur indique que la plage entière n’a pas de paramètre de wrap uniforme
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWrapText(): boolean;'
    return:
      type: boolean
      description: ''
- name: setAutoIndent(autoIndent)
  uid: ExcelScript!ExcelScript.RangeFormat#setAutoIndent:member(1)
  package: ExcelScript!
  fullName: setAutoIndent(autoIndent)
  summary: Spécifie si le texte est automatiquement mis en retrait lorsque l’alignement du texte est égal à la distribution.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAutoIndent(autoIndent: boolean): void;'
    parameters:
    - id: autoIndent
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setColumnWidth(columnWidth)
  uid: ExcelScript!ExcelScript.RangeFormat#setColumnWidth:member(1)
  package: ExcelScript!
  fullName: setColumnWidth(columnWidth)
  summary: Spécifie la largeur de toutes les colums dans la plage. Si les largeurs de colonne ne sont pas uniformes, `null` elles sont renvoyées.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setColumnWidth(columnWidth: number): void;'
    parameters:
    - id: columnWidth
      description: ''
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script inserts a new column and sets that column's width to 100 pixels wide.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n\n  // Insert a new column between the current B and C columns.\n  const bcRange = currentSheet.getRange(\"C:C\");\n  const newColumn = bcRange.insert(ExcelScript.InsertShiftDirection.right);\n  \n  // Set the column width of the new column to 100 pixels.\n  newColumn.getFormat().setColumnWidth(100);\n}\n```"
- name: setHorizontalAlignment(horizontalAlignment)
  uid: ExcelScript!ExcelScript.RangeFormat#setHorizontalAlignment:member(1)
  package: ExcelScript!
  fullName: setHorizontalAlignment(horizontalAlignment)
  summary: Représente l’alignement horizontal de l’objet spécifié. Pour plus `ExcelScript.HorizontalAlignment` d’informations, voir.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setHorizontalAlignment(horizontalAlignment: HorizontalAlignment): void;'
    parameters:
    - id: horizontalAlignment
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.HorizontalAlignment:enum" />
    return:
      type: void
      description: ''
- name: setIndentLevel(indentLevel)
  uid: ExcelScript!ExcelScript.RangeFormat#setIndentLevel:member(1)
  package: ExcelScript!
  fullName: setIndentLevel(indentLevel)
  summary: Entier compris entre 0 à 250 qui indique le niveau de retrait du style.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setIndentLevel(indentLevel: number): void;'
    parameters:
    - id: indentLevel
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setRangeBorderTintAndShade(rangeBorderTintAndShade)
  uid: ExcelScript!ExcelScript.RangeFormat#setRangeBorderTintAndShade:member(1)
  package: ExcelScript!
  fullName: setRangeBorderTintAndShade(rangeBorderTintAndShade)
  summary: Spécifie un double qui s’éclaircit ou assombrit une couleur pour les bordures de plage. La valeur est entre -1 (plus sombre) et 1 (plus clair), avec 0 pour la couleur d’origine. Une `null` valeur indique que l’ensemble de la collection de bordures n’a pas de paramètre `tintAndShade` uniforme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setRangeBorderTintAndShade(rangeBorderTintAndShade: number): void;'
    parameters:
    - id: rangeBorderTintAndShade
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setReadingOrder(readingOrder)
  uid: ExcelScript!ExcelScript.RangeFormat#setReadingOrder:member(1)
  package: ExcelScript!
  fullName: setReadingOrder(readingOrder)
  summary: L’ordre de lecture de la plage.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setReadingOrder(readingOrder: ReadingOrder): void;'
    parameters:
    - id: readingOrder
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.ReadingOrder:enum" />
    return:
      type: void
      description: ''
- name: setRowHeight(rowHeight)
  uid: ExcelScript!ExcelScript.RangeFormat#setRowHeight:member(1)
  package: ExcelScript!
  fullName: setRowHeight(rowHeight)
  summary: Hauteur de toutes les lignes de la plage. Si les hauteurs de ligne ne sont pas uniformes, `null` elles sont renvoyées.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setRowHeight(rowHeight: number): void;'
    parameters:
    - id: rowHeight
      description: ''
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Exemples\n\n```TypeScript\n/**\n * This script inserts a new row and sets that row's width to 100 pixels tall.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n\n  // Insert a new row between the current 2 and 3 rows.\n  const bcRange = currentSheet.getRange(\"3:3\");\n  const newRow = bcRange.insert(ExcelScript.InsertShiftDirection.down);\n  \n  // Set the row height of the new row to 100 pixels.\n  newRow.getFormat().setRowHeight(100);\n}\n```"
- name: setShrinkToFit(shrinkToFit)
  uid: ExcelScript!ExcelScript.RangeFormat#setShrinkToFit:member(1)
  package: ExcelScript!
  fullName: setShrinkToFit(shrinkToFit)
  summary: Spécifie si le texte est automatiquement réduit pour tenir dans la largeur de colonne disponible.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setShrinkToFit(shrinkToFit: boolean): void;'
    parameters:
    - id: shrinkToFit
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setTextOrientation(textOrientation)
  uid: ExcelScript!ExcelScript.RangeFormat#setTextOrientation:member(1)
  package: ExcelScript!
  fullName: setTextOrientation(textOrientation)
  summary: Orientation du texte de toutes les cellules de la plage. L’orientation du texte doit être un integer soit de -90 à 90, soit de 180 pour le texte orienté verticalement. Si l’orientation au sein d’une plage n’est pas uniforme, `null` elle est renvoyée.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setTextOrientation(textOrientation: number): void;'
    parameters:
    - id: textOrientation
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setUseStandardHeight(useStandardHeight)
  uid: ExcelScript!ExcelScript.RangeFormat#setUseStandardHeight:member(1)
  package: ExcelScript!
  fullName: setUseStandardHeight(useStandardHeight)
  summary: 'Détermine si la hauteur de ligne de l’objet `Range` est égale à la hauteur standard de la feuille. Renvoie `true` si la hauteur de ligne de l’objet `Range` est égale à la hauteur standard de la feuille. Renvoie `null` si la plage contient plusieurs lignes et que les lignes ne sont pas toutes de la même hauteur. Renvoie dans le `false` cas contraire. Remarque : cette propriété est uniquement destinée à être définie sur `true`<!-- -->. Sa définition n’a `false` aucun effet.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setUseStandardHeight(useStandardHeight: boolean): void;'
    parameters:
    - id: useStandardHeight
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setUseStandardWidth(useStandardWidth)
  uid: ExcelScript!ExcelScript.RangeFormat#setUseStandardWidth:member(1)
  package: ExcelScript!
  fullName: setUseStandardWidth(useStandardWidth)
  summary: 'Spécifie si la largeur de colonne de l’objet `Range` est égale à la largeur standard de la feuille. Renvoie `true` si la largeur de colonne de l’objet `Range` est égale à la largeur standard de la feuille. Renvoie `null` si la plage contient plusieurs colonnes et que les colonnes ne sont pas toutes de la même hauteur. Renvoie dans le `false` cas contraire. Remarque : cette propriété est uniquement destinée à être définie sur `true`<!-- -->. Sa définition n’a `false` aucun effet.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setUseStandardWidth(useStandardWidth: boolean): void;'
    parameters:
    - id: useStandardWidth
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setVerticalAlignment(verticalAlignment)
  uid: ExcelScript!ExcelScript.RangeFormat#setVerticalAlignment:member(1)
  package: ExcelScript!
  fullName: setVerticalAlignment(verticalAlignment)
  summary: Représente l’alignement vertical de l’objet spécifié. Pour plus `ExcelScript.VerticalAlignment` d’informations, voir.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setVerticalAlignment(verticalAlignment: VerticalAlignment): void;'
    parameters:
    - id: verticalAlignment
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.VerticalAlignment:enum" />
    return:
      type: void
      description: ''
- name: setWrapText(wrapText)
  uid: ExcelScript!ExcelScript.RangeFormat#setWrapText:member(1)
  package: ExcelScript!
  fullName: setWrapText(wrapText)
  summary: Spécifie si Excel le texte dans l’objet. Une `null` valeur indique que la plage entière n’a pas de paramètre de wrap uniforme
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setWrapText(wrapText: boolean): void;'
    parameters:
    - id: wrapText
      description: ''
      type: boolean
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 2e0aa07251e56260c03256716594889b1cf5d0cf
  ms.sourcegitcommit: dfc12de9e6eb5de71199b36f92ce93039509ad37
  ms.translationtype: MT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 03/23/2022
  ms.locfileid: "63755983"
