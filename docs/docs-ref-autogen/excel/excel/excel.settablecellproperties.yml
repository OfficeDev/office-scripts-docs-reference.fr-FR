### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SettableCellProperties:interface'
    summary: Représente le paramètre d’entrée de setCellProperties.
    name: Excel.SettableCellProperties
    fullName: Excel.SettableCellProperties
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.SettableCellProperties#format:member'
      - 'excel!Excel.SettableCellProperties#hyperlink:member'
      - 'excel!Excel.SettableCellProperties#style:member'
  - uid: 'excel!Excel.SettableCellProperties#format:member'
    summary: Représente la `format` propriété.
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'format?: Excel.CellPropertiesFormat;'
      return:
        type:
          - 'excel!Excel.CellPropertiesFormat:interface'
  - uid: 'excel!Excel.SettableCellProperties#hyperlink:member'
    summary: Représente la `hyperlink` propriété.
    name: hyperlink
    fullName: hyperlink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyperlink?: Excel.RangeHyperlink;'
      return:
        type:
          - 'excel!Excel.RangeHyperlink:interface'
  - uid: 'excel!Excel.SettableCellProperties#style:member'
    summary: Représente la `style` propriété.
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style?: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>範例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getActiveWorksheet();

              // Creating the SettableCellProperties objects to use for the range.
              // In your add-in, these should be created once, outside the function.
              let topHeaderProps: Excel.SettableCellProperties = {
                  // The style property takes a string matching the name of an Excel style.
                  // Built-in style names are listed in the `BuiltInStyle` enum.
                  // Note that a style will overwrite any formatting,
                  // so do not use the format property with the style property.
                  style: "Heading1"
              };

              let headerProps: Excel.SettableCellProperties = {
                  // Any subproperties of format that are not set will not be changed when these cell properties are set.
                  format: {
                      fill: {
                          color: "Blue"
                      },
                      font: {
                          color: "White",
                          bold: true
                      }
                  }
              };

              let nonApplicableProps: Excel.SettableCellProperties = {
                  format: {
                      fill: {
                          pattern: Excel.FillPattern.gray25
                      },
                      font: {
                          color: "Gray",
                          italic: true
                      }
                  }
              };

              let matchupScoreProps: Excel.SettableCellProperties = {
                  format: {
                      borders: {
                          bottom: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          left: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          right: {
                              style: Excel.BorderLineStyle.continuous
                          },
                          top: {
                              style: Excel.BorderLineStyle.continuous
                          }
                      }
                  }
              };

              let range = sheet.getRange("A1:E5");

              // You can use empty JSON objects to avoid changing a cell's properties.
              range.setCellProperties([
                  [topHeaderProps, {}, {}, {}, {}],
                  [{}, {}, headerProps, headerProps, headerProps],
                  [{}, headerProps, nonApplicableProps, matchupScoreProps, matchupScoreProps],
                  [{}, headerProps, matchupScoreProps, nonApplicableProps, matchupScoreProps],
                  [{}, headerProps, matchupScoreProps, matchupScoreProps, nonApplicableProps]
              ]);

              sheet.getUsedRange().format.autofitColumns();
              await context.sync();
          }
          ```
references:
  - uid: 'excel!Excel.CellPropertiesFormat:interface'
    name: CellPropertiesFormat
    fullName: Excel.CellPropertiesFormat
  - uid: 'excel!Excel.RangeHyperlink:interface'
    name: RangeHyperlink
    fullName: Excel.RangeHyperlink