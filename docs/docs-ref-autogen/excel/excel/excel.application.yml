### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Application:class'
    summary: Représente l’application Excel qui gère le classeur.
    name: Excel.Application
    fullName: Excel.Application
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.Application#calculate:member(1)'
      - 'excel!Excel.Application#calculate:member(2)'
      - 'excel!Excel.Application#calculationEngineVersion:member'
      - 'excel!Excel.Application#calculationMode:member'
      - 'excel!Excel.Application#calculationState:member'
      - 'excel!Excel.Application#context:member'
      - 'excel!Excel.Application#iterativeCalculation:member'
      - 'excel!Excel.Application#load:member(1)'
      - 'excel!Excel.Application#load:member(2)'
      - 'excel!Excel.Application#set:member(1)'
      - 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
      - 'excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)'
  - uid: 'excel!Excel.Application#calculate:member(1)'
    summary: Recalcule tous les classeurs actuellement ouverts dans Excel.
    name: calculate(calculationType)
    fullName: calculate(calculationType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationType: Excel.CalculationType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationType
          description: 'Spécifie le type de calcul à utiliser. Pour plus d’informations, voir Excel. CalculationType.'
          type:
            - 'excel!Excel.CalculationType:enum'
  - uid: 'excel!Excel.Application#calculate:member(2)'
    summary: Recalcule tous les classeurs actuellement ouverts dans Excel.
    name: calculate(calculationTypeString)
    fullName: calculate(calculationTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: calculationTypeString
          description: 'Spécifie le type de calcul à utiliser. Pour plus d’informations, voir Excel. CalculationType.'
          type:
            - '"Recalculate" | "Full" | "FullRebuild"'
  - uid: 'excel!Excel.Application#calculationEngineVersion:member'
    summary: Renvoie la version du moteur de calcul Excel utilisée pour le dernier recalcul complet. En lecture seule.
    name: calculationEngineVersion
    fullName: calculationEngineVersion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Application#calculationMode:member'
    summary: "Renvoie le mode de calcul utilisé dans le classeur, tel que défini par les constantes dans Excel. CalculationMode. Les valeurs possibles sont les suivantes\_:`Automatic`<!-- -->, où Excel contrôle le recalcul\_;`AutomaticExceptTables`<!-- -->, où Excel contrôle le recalcul, mais ignore les modifications apportées aux tableaux\_;`Manual`<!-- -->, où le calcul est effectué lorsque l’utilisateur le demande."
    name: calculationMode
    fullName: calculationMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
      return:
        type:
          - 'excel!Excel.Application#calculationMode~0:complex'
  - uid: 'excel!Excel.Application#calculationState:member'
    summary: 'Renvoie l’état de calcul de l’application. Pour plus d’informations, voir Excel.CalculationState. En lecture seule.'
    name: calculationState
    fullName: calculationState
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationState: Excel.CalculationState | "Done" | "Calculating" | "Pending";'
      return:
        type:
          - 'excel!Excel.Application#calculationState~0:complex'
  - uid: 'excel!Excel.Application#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Application#iterativeCalculation:member'
    summary: 'Capture d’écran des paramètres de calcul itératif. Dans Excel sous Windows et Mac, les paramètres s’appliquent à l’application Excel. Dans Excel sur le Web et d’autres plateformes, les paramètres s’appliquent au classeur actif.'
    name: iterativeCalculation
    fullName: iterativeCalculation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iterativeCalculation: Excel.IterativeCalculation;'
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
  - uid: 'excel!Excel.Application#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Application#load:member(2)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Application;
      return:
        type:
          - 'excel!Excel.Application:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`est une chaîne délimitée par des virgules qui spécifie les propriétés à `propertyNamesAndPaths.expand` charger et une chaîne délimitée par des virgules qui spécifie les propriétés de navigation à charger.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Application#set:member(1)'
    summary: 'Définit plusieurs propriétés de l’objet en même temps, en fonction d’un objet chargé existant.'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Application:class'
  - uid: 'excel!Excel.Application#suspendApiCalculationUntilNextSync:member(1)'
    summary: "Interrompt le calcul jusqu'à ce que la prochaine méthode «\_context.sync()\_» soit appelée. Une fois cette option définie, il incombe au développeur de recalculer le classeur afin de garantir que toutes les dépendances sont propagées."
    name: suspendApiCalculationUntilNextSync()
    fullName: suspendApiCalculationUntilNextSync()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'suspendApiCalculationUntilNextSync(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Application#suspendScreenUpdatingUntilNextSync:member(1)'
    summary: "Interrompt le calcul jusqu'à ce que la prochaine méthode «\_context.sync()\_» soit appelée."
    name: suspendScreenUpdatingUntilNextSync()
    fullName: suspendScreenUpdatingUntilNextSync()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'suspendScreenUpdatingUntilNextSync(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>範例

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getActiveWorksheet();
              let rowCount = 500;
              let columnCount = 20;

              let startTime = Date.now();
              console.log("Starting...");

              if (pauseScreenPainting) {
                  context.application.suspendScreenUpdatingUntilNextSync();
              }

              for (let i = 0; i < rowCount; i++) {
                  for (let j = 0; j < columnCount; j++) {
                      let cell = sheet.getCell(i, j);
                      cell.values = [[i * j * Math.random()]];
                      if (untrack) {
                          cell.untrack();
                      }
                  }
              }

              await context.sync();

              console.log(`Ending. Adding ${rowCount * columnCount} cells took ${Date.now() - startTime} milliseconds`);
          }
          ```
references:
  - uid: 'excel!Excel.CalculationType:enum'
    name: CalculationType
    fullName: Excel.CalculationType
  - uid: 'excel!Excel.Application#calculationMode~0:complex'
    name: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
    fullName: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
    spec.typeScript:
      - uid: 'excel!Excel.CalculationMode:enum'
        name: Excel.CalculationMode
        fullName: Excel.CalculationMode
      - name: ' | "Automatic" | "AutomaticExceptTables" | "Manual"'
        fullName: ' | "Automatic" | "AutomaticExceptTables" | "Manual"'
  - uid: 'excel!Excel.Application#calculationState~0:complex'
    name: Excel.CalculationState | "Done" | "Calculating" | "Pending"
    fullName: Excel.CalculationState | "Done" | "Calculating" | "Pending"
    spec.typeScript:
      - uid: 'excel!Excel.CalculationState:enum'
        name: Excel.CalculationState
        fullName: Excel.CalculationState
      - name: ' | "Done" | "Calculating" | "Pending"'
        fullName: ' | "Done" | "Calculating" | "Pending"'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.IterativeCalculation:class'
    name: IterativeCalculation
    fullName: Excel.IterativeCalculation
  - uid: 'excel!Excel.Application:class'
    name: Application
    fullName: Excel.Application