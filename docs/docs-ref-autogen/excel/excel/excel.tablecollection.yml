### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableCollection:class'
    summary: 'Représente une collection de tous les tableaux qui font partie du classeur ou de la feuille de calcul, en fonction de la méthode d’appel.'
    name: Excel.TableCollection
    fullName: Excel.TableCollection
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.TableCollection#add:member(1)'
      - 'excel!Excel.TableCollection#context:member'
      - 'excel!Excel.TableCollection#count:member'
      - 'excel!Excel.TableCollection#getCount:member(1)'
      - 'excel!Excel.TableCollection#getItem:member(1)'
      - 'excel!Excel.TableCollection#getItemAt:member(1)'
      - 'excel!Excel.TableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.TableCollection#items:member'
      - 'excel!Excel.TableCollection#load:member(1)'
  - uid: 'excel!Excel.TableCollection#add:member(1)'
    summary: 'Crée un tableau L’adresse de la source ou de l’objet de la plage détermine la feuille de calcul dans laquelle le tableau sera ajouté. Si l’ajout ne peut être effectué (par exemple, parce que l’adresse n’est pas valide, ou parce que le tableau empiéterait sur un autre tableau), un message d’erreur apparaît.'
    name: 'add(address, hasHeaders)'
    fullName: 'add(address, hasHeaders)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(address: Range | string, hasHeaders: boolean): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: address
          description: 'Objet de plage ou nom/adresse (string) de la plage représentant la source de données. Si l’adresse ne contient pas de nom de feuille, la feuille ouverte est utilisée.'
          type:
            - 'excel!Excel.TableCollection#add~0:complex'
        - id: hasHeaders
          description: 'Valeur booléenne qui indique si les données importées disposent d’étiquettes de colonne. Si la source ne contient pas d’en-têtes (autrement dit, lorsque cette propriété est définie sur false), Excel génère automatiquement un en-tête et décale les données d’une ligne vers le bas.'
          type:
            - boolean
  - uid: 'excel!Excel.TableCollection#context:member'
    summary: Contexte de demande associé à l’objet. Cette opération connecte le processus du complément au processus de l’application hôte Office.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableCollection#count:member'
    summary: Renvoie le nombre de tableaux dans le classeur. En lecture seule.
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableCollection#getCount:member(1)'
    summary: Obtient le nombre de tableaux de la collection.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableCollection#getItem:member(1)'
    summary: Obtient un tableau à l’aide de son nom ou de son ID.
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: key
          description: Nom ou ID du tableau à récupérer.
          type:
            - string
  - uid: 'excel!Excel.TableCollection#getItemAt:member(1)'
    summary: Obtient un tableau en fonction de sa position dans la collection.
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: index
          description: Valeur d’indice de l’objet à récupérer. Avec indice zéro.
          type:
            - number
  - uid: 'excel!Excel.TableCollection#getItemOrNullObject:member(1)'
    summary: 'Obtient un tableau à l’aide de son nom ou de son ID. Si le tableau n’existe pas, renvoie un objet null.'
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: key
          description: Nom ou ID du tableau à récupérer.
          type:
            - string
  - uid: 'excel!Excel.TableCollection#items:member'
    summary: Obtient l’élément enfant chargé dans cette collection de sites.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'excel!Excel.TableCollection#items~0:complex'
  - uid: 'excel!Excel.TableCollection#load:member(1)'
    summary: Files d’attente de la commande pour charger les propriétés de l’objet spécifié. Vous devez appeler `context.sync()` avant de lire les propriétés.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: Une chaîne délimitée par des virgules ou un tableau de chaînes qui spécifient les propriétés à charger.
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.Table:class'
    name: Table
    fullName: Excel.Table
  - uid: 'excel!Excel.TableCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.TableCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.TableCollection#items~0:complex'
    name: 'Excel.Table[]'
    fullName: 'Excel.Table[]'
    spec.typeScript:
      - uid: 'excel!Excel.Table:class'
        name: Excel.Table
        fullName: Excel.Table
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableCollection:class'
    name: TableCollection
    fullName: Excel.TableCollection